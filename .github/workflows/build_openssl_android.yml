name: android-openssl
on:
   workflow_dispatch:
   pull_request:
   push:

jobs:
  Build-Libs-OpenSSL-Android:
    name: 'Build-OpenSSL-Lib-Android'
    runs-on: ubuntu-latest
    # if: |
      # contains(github.event.head_commit.message, '[all]') ||
      # contains(github.event.head_commit.message, '[android]') ||
      # contains(github.event.head_commit.message, '[android-openssl]') ||
      # contains(github.event.head_commit.message, '[openssl]')    

    strategy:
      matrix:
        arch: [armeabi-v7a]
      fail-fast: false

    steps:
    - name: 'Setup Java'
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: 'Setup Android NDK'
      id: setup-ndk
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: 'r19c'

    - name: 'Get openssl'
      uses: actions/checkout@v4
      with:
        repository: openssl/openssl
        ref: OpenSSL_1_1_1t
        path: openssl

    - name: 'Build OpenSSL Android'
      run: |
        cd openssl
        mkdir build
            PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH ./Configure android-arm no-tests -U__ANDROID_API__ -D__ANDROID_API__=21 && PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH make
            mkdir build/armeabi-v7a
            cp libcrypto.a ./build/armeabi-v7a/libcrypto.a
            cp libssl.a ./build/armeabi-v7a/libssl.a
      env:
        ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
      
    - name: Archive Android OpenSSL libs
      uses: actions/upload-artifact@v4
      with:
        retention-days: 1
        name: android-openssl
        path: '~/work/3rd-build-ga/3rd-build-ga/openssl/build'          
      
  github-release:
    name: GitHub Release
    needs: Build-Libs-OpenSSL-Android
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4

      - name: Setup | Artifacts
        uses: actions/download-artifact@v4

      - name: Setup | Checksums
        run: for file in $(find ./ -name '*.a' ); do openssl dgst -sha256 -r "$file" | awk '{print $1}' > "${file}.sha256"; done

      - name: Zip ALL
        run: for file in *; do zip -r ${file%.*}.zip  $file; done

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: android-openssl.zip
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true   
